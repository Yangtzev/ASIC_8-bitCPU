//opcode_operand  // addr                     assembly code
//--------------  // ----  ----------------------------------------------------
    111_00011     //  00           JMP LOOP   //jump to the address of LOOP
@03 101_11011     //  03   LOOP:   LDA FN2    //load value in FN2 into accum
    110_11100     //  04           STO TEMP   //store accumulator in TEMP
    010_11010     //  05           ADD FN1    //add value in FN1 to accumulator
    110_11011     //  06           STO FN2    //store result in FN2
    101_11100     //  07           LDA TEMP   //load TEMP into the accumulator
    110_11010     //  08           STO FN1    //store accumulator in FN1
    100_11101     //  09           XOR LIMIT  //compare accumulator to LIMIT
    001_00000     //  0A           SKZ        //if accum = 0, skip to DONE
    111_00011     //  0B           JMP LOOP   //jump to address of LOOP
    000_00000     //  0C   DONE:   HLT        //end of program
    101_11111     //  0D   AGAIN:  LDA ONE
    110_11010     //  0E           STO FN1
    101_11110     //  0F           LDA ZERO
    110_11011     //  10           STO FN2
    111_00011     //  11           JMP LOOP   //jump to address of LOOP

@1A 00000000      //  1A   FN1:               //variable - stores 1st Fib. No.
    00000001      //  1B   FN2:               //variable - stores 2nd Fib. No.
    00000000      //  1C   TEMP:              //temporary variable
    10010000      //  1D   LIMIT:             //constant 144 - max value
    00000000      //  1E   ZERO:              //constant 0
    00000001      //  1F   ONE:               //constant 1

